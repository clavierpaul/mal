REM Core function library for mal in BBC BASIC

REM  BBC BASIC doesn't have function pointers.  There are essentially
REM  two ways to work around this.  One is to use the BASIC EVAL function,
REM  constructing a string that will call an arbitrary function with the
REM  specified arguments.  The other is to us a big CASE statement.
REM  Following the suggestion in Hints.md, this code takes the latter
REM  approach.

REM  Call a core function, taking the function number and an array of mal
REM  objects to pass as arguments.
DEF FNcore_call(fn%, args%())
  CASE fn% OF
    WHEN 0 : REM +
      PROCcore_assert_args("ii", "+", args%())
      =FNalloc_int(FNunbox_int(args%(0)) + FNunbox_int(args%(1)))
    WHEN 1 : REM -
      PROCcore_assert_args("ii", "-", args%())
      =FNalloc_int(FNunbox_int(args%(0)) - FNunbox_int(args%(1)))
    WHEN 2 : REM *
      PROCcore_assert_args("ii", "*", args%())
      =FNalloc_int(FNunbox_int(args%(0)) * FNunbox_int(args%(1)))
    WHEN 3 : REM /
      PROCcore_assert_args("ii", "/", args%())
      =FNalloc_int(FNunbox_int(args%(0)) DIV FNunbox_int(args%(1)))
  ENDCASE
ERROR &40E809F1, "Call to non-existent core function"

DEF PROCcore_assert_args(spec$, fn$, args%())
  REM  Check that a core function is being provided with the correct
  REM  number and type of arguments.  spec$ is the argument specification
  REM  as a string.  Each character represents an argument:
  REM  "i" - Must be an integer

  LOCAL i%

  IF DIM(args%(), 1) <> LEN(spec$) THEN
    ERROR &40E80921, "Core function '"+fn$+"' requires "+STR$(LEN(spec$))+" arguments"
  ENDIF
  FOR i% = 1 TO LEN(spec$)
    CASE MID$(spec$, i%, 1) OF
      WHEN "i"
        IF NOT FNis_int(args%(i% - 1)) THEN
	  ERROR &40E80911, "Argument "+STR$(i%)+" to core function '"+fn$+"' must be an integer"
	ENDIF
    ENDCASE
  NEXT i%
ENDPROC
