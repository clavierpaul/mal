REM Step 3 of mal in BBC BASIC

LIBRARY "types"
LIBRARY "reader"
LIBRARY "printer"
LIBRARY "env"

PROCtypes_init

REM  These correspond with the CASE statement in FNcore_call
repl_env% = FNalloc_environment(FNnil)
PROCenv_set(repl_env%, FNalloc_symbol("+"), FNalloc_corefn(0))
PROCenv_set(repl_env%, FNalloc_symbol("-"), FNalloc_corefn(1))
PROCenv_set(repl_env%, FNalloc_symbol("*"), FNalloc_corefn(2))
PROCenv_set(repl_env%, FNalloc_symbol("/"), FNalloc_corefn(3))

REPEAT
  REM  Catch all errors apart from "Escape".
  ON ERROR LOCAL PRINT REPORT$:IF ERR = 17 THEN END
  PRINT "user> ";
  LINE INPUT "" line$
  PRINT FNrep(line$)
UNTIL FALSE

END

DEF FNREAD(a$)
=FNread_str(a$)

DEF FNEVAL(ast%, env%)
  LOCAL car%
  IF NOT FNis_list(ast%) THEN =FNeval_ast(ast%, env%)
  IF FNis_empty(ast%) THEN =ast%
  car% = FNlist_car(ast%)
  IF FNis_symbol(car%) THEN
    CASE FNunbox_symbol(car%) OF
      REM  Special forms
      WHEN "def!"
        LOCAL val%
	val% = FNEVAL(FNlist_nth(ast%, 2), env%)
        PROCenv_set(env%, FNlist_nth(ast%, 1), val%)
	=val%
      WHEN "let*"
        LOCAL bindings%
	env% = FNalloc_environment(env%)
	bindings% = FNlist_nth(ast%, 1)
	WHILE NOT FNis_empty(bindings%)
	  PROCenv_set(env%, FNlist_car(bindings%), FNEVAL(FNlist_nth(bindings%, 1), env%))
	  bindings% = FNlist_cdr(FNlist_cdr(bindings%))
	ENDWHILE
	=FNEVAL(FNlist_nth(ast%, 2), env%)
    ENDCASE
  ENDIF
  ast% = FNeval_ast(ast%, env%)
=FNcore_call(FNunbox_corefn(FNlist_car(ast%)), FNlist_cdr(ast%))

DEF FNPRINT(a%)
=FNpr_str(a%, TRUE)

DEF FNrep(a$)
=FNPRINT(FNEVAL(FNREAD(a$), repl_env%))

DEF FNeval_ast(ast%, env%)
  LOCAL val%, car%, cdr%
  IF FNis_symbol(ast%) THEN =FNenv_get(env%, ast%)
  IF FNis_list(ast%) THEN
    IF FNis_empty(ast%) THEN =ast%
    car% = FNEVAL(FNlist_car(ast%), env%)
    cdr% = FNeval_ast(FNlist_cdr(ast%), env%)
    =FNalloc_pair(car%, cdr%)
  ENDIF
=ast%

REM  Call a core function, taking the function number and a mal list of
REM  objects to pass as arguments.
DEF FNcore_call(fn%, args%)
  LOCAL x%, y%, z%
  x% = FNunbox_int(FNlist_car(args%))
  y% = FNunbox_int(FNlist_car(FNlist_cdr(args%)))
  CASE fn% OF
    WHEN 0 : z% = x%  +  y%
    WHEN 1 : z% = x%  -  y%
    WHEN 2 : z% = x%  *  y%
    WHEN 3 : z% = x% DIV y%
    OTHERWISE : ERROR &40E809F1, "Call to non-existent core function"
  ENDCASE
=FNalloc_int(z%)

REM Local Variables:
REM indent-tabs-mode: nil
REM End:
