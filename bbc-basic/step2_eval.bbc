REM Step 2 of mal in BBC BASIC

LIBRARY "malio_builtin"
LIBRARY "types"
LIBRARY "reader"
LIBRARY "printer"

PROCmalio_init
PROCtypes_init

REM  These correspond with the CASE statement in FNcore_call
repl_env% = FNempty_hashmap
repl_env% = FNalloc_hashmap_entry("+", FNalloc_corefn(0), repl_env%)
repl_env% = FNalloc_hashmap_entry("-", FNalloc_corefn(1), repl_env%)
repl_env% = FNalloc_hashmap_entry("*", FNalloc_corefn(2), repl_env%)
repl_env% = FNalloc_hashmap_entry("/", FNalloc_corefn(3), repl_env%)

REPEAT
  REM  Catch all errors apart from "Escape".
  ON ERROR LOCAL PRINT REPORT$:IF ERR = 17 THEN END
  line$ = FNmalio_input("user> ")
  PROCmalio_println(FNrep(line$))
UNTIL FNmalio_eof

END

DEF FNREAD(a$)
=FNread_str(a$)

DEF FNEVAL(ast%, env%)
  LOCAL args%()
  IF NOT FNis_list(ast%) THEN =FNeval_ast(ast%, env%)
  IF FNis_empty(ast%) THEN =ast%
  ast% = FNeval_ast(ast%, env%)
  DIM args%(FNlist_len(FNlist_cdr(ast%)))
  PROClist_to_array(FNlist_cdr(ast%), args%())
=FNcore_call(FNunbox_corefn(FNlist_car(ast%)), args%())

DEF FNPRINT(a%)
=FNpr_str(a%)

DEF FNrep(a$)
=FNPRINT(FNEVAL(FNREAD(a$), repl_env%))

DEF FNeval_ast(ast%, env%)
  LOCAL val%, car%, cdr%
  IF FNis_symbol(ast%) THEN
    val% = FNhashmap_get(env%, FNunbox_symbol(ast%))
    IF val% = FNnil THEN ERROR &40E80922, "Symbol not in environment"
    =val%
  ENDIF
  IF FNis_list(ast%) THEN
    IF FNis_empty(ast%) THEN =ast%
    car% = FNEVAL(FNlist_car(ast%), env%)
    cdr% = FNeval_ast(FNlist_cdr(ast%), env%)
    =FNalloc_pair(car%, cdr%)
  ENDIF
=ast%

REM  Call a core function, taking the function number and an array of mal
REM  objects to pass as arguments.
DEF FNcore_call(fn%, args%())
  CASE fn% OF
    WHEN 0 : =FNalloc_int(FNunbox_int(args%(0))  +  FNunbox_int(args%(1)))
    WHEN 1 : =FNalloc_int(FNunbox_int(args%(0))  -  FNunbox_int(args%(1)))
    WHEN 2 : =FNalloc_int(FNunbox_int(args%(0))  *  FNunbox_int(args%(1)))
    WHEN 3 : =FNalloc_int(FNunbox_int(args%(0)) DIV FNunbox_int(args%(1)))
  ENDCASE
ERROR &40E809F1, "Call to non-existent core function"

REM Local Variables:
REM indent-tabs-mode: nil
REM End:
