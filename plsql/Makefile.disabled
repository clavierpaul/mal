# plpgsql OR plsql
MODE = plsql

SOURCES_LISP = env.sql core.sql step9_try.sql
SOURCES = wrap.sh io.sql.$(MODE) init.sql types.sql.$(MODE) reader.sql printer.sql $(SOURCES_LISP)

STEP0_DEPS = io.sql # init.sql
STEP1_DEPS = $(STEP0_DEPS) types.sql reader.sql printer.sql
STEPA_DEPS = $(STEP1_DEPS)

io.sql: src/io.sql.$(MODE)
	cp $< $@

types.sql: src/types.sql.$(MODE)
	cp $< $@

%.sql: src/%.sql
	./convert.sh $< > $@

step0_repl.sql: $(STEP0_DEPS)
step1_read_print.sql: $(STEP1_DEPS)

clean:
	rm -f step*.sql $(STEPA_DEPS)

.PHONY: stats tests $(TESTS)

stats: $(SOURCES)
	@wc $^
	@printf "%5s %5s %5s %s\n" `grep -E "^[[:space:]]*#|^[[:space:]]*$$" $^ | wc` "[comments/blanks]"
stats-lisp: $(SOURCES_LISP)
	@wc $^
	@printf "%5s %5s %5s %s\n" `grep -E "^[[:space:]]*#|^[[:space:]]*$$" $^ | wc` "[comments/blanks]"

