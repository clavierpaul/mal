(module $step1_read_print

  ;; READ
  (func $READ (param $str i32) (result i32)
    ($read_str $str)
  )

  ;; EVAL
  (func $EVAL (param $ast i32 $env i32) (result i32)
    $ast
  )

  ;; PRINT
  (func $PRINT (param $ast i32) (result i32)
    ($pr_str $ast 1)
  )

  ;; REPL
  (func $REP (param $line i32 $env i32) (result i32)
    (LET $mv1 0 $mv2 0 $ms 0)
    (block $done
      (set_local $mv1 ($READ $line))
      (br_if $done (get_global $error_type))

      (set_local $mv2 ($EVAL $mv1 $env))
      (br_if $done (get_global $error_type))

;;      ($PR_MEMORY -1 -1)
      (set_local $ms ($PRINT $mv2))
    )

    ;; release memory from MAL_READ
    ($RELEASE $mv1)
    $ms
  )

  (func $main (result i32)
    (LET $line (STATIC_ARRAY 201)
         $res  0)

    ;; DEBUG
;;    ($printf_1 "argc: 0x%x\n" $argc)
;;    ($printf_1 "memoryBase: 0x%x\n" (get_global $memoryBase))
;;    ($printf_1 "heap_start: 0x%x\n" (get_global $heap_start))
;;    ($printf_1 "heap_end: 0x%x\n" (get_global $heap_end))
;;    ($printf_1 "mem: 0x%x\n" (get_global $mem))
;;    ($printf_1 "string_mem: %d\n" (get_global $string_mem))

;;    ($PR_MEMORY_RAW
;;      (get_global $mem) (i32.add (get_global $mem)
;;                                 (i32.mul (get_global $mem_unused_start) 4)))

    (drop ($STRING (get_global $STRING_T) "uvw"))
    (drop ($STRING (get_global $STRING_T) "xyz"))

    ;;($PR_MEMORY -1 -1)

    ;; Start REPL
    (block $repl_done
      (loop $repl_loop
        (br_if $repl_done (i32.eqz ($readline "user> " $line)))
        (br_if $repl_loop (i32.eq (i32.load8_u $line) 0))
        (set_local $res ($REP $line 0))
        (if (get_global $error_type)
          (then
            ($printf_1 "Error: %s\n" (get_global $error_str))
            (set_global $error_type 0))
          (else
            ($printf_1 "%s\n" ($to_String $res))))
        ($RELEASE $res)
        ;;($PR_MEMORY_SUMMARY_SMALL)
        (br $repl_loop)
      )
    )

    ($print "\n")
    ;;($PR_MEMORY -1 -1)
    0
  )


  (export "_main" (func $main))
  (export "__post_instantiate" (func $init_memory))
)

